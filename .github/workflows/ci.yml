name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always
  RUSTDOCFLAGS: "--deny warnings"
  RUSTFLAGS: "--deny warnings"
      
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        toolchain: ["nightly"]
        os: ["windows-latest"]
        target: ["x86_64-pc-windows-msvc", "i686-pc-windows-msvc"]
        include:
          - target: x86_64-pc-windows-msvc
            target32: i686-pc-windows-msvc
    steps:
    - uses: actions/checkout@v4
    
    - name: Install latest rust ${{ matrix.toolchain }} for ${{ matrix.target }}
      uses: dtolnay/rust-toolchain@stable
      with:
          targets: ${{ matrix.target }}
          toolchain: ${{ matrix.toolchain }}
          
    - name: Install latest rust ${{ matrix.toolchain }} for x86 version of target
      if: matrix.target32
      uses: dtolnay/rust-toolchain@stable
      with:
          targets: ${{ matrix.target32 }}
          toolchain: ${{ matrix.toolchain }}
      
    - name: Build
      run: cargo build --target ${{ matrix.target }}
      
    - name: Build test target
      run: cargo build --target ${{ matrix.target }} --manifest-path "tests/helpers/test_target/Cargo.toml" --all-targets
    - name: Build test payload
      run: cargo build --target ${{ matrix.target }} --manifest-path "tests/helpers/test_payload/Cargo.toml" --all-targets
      
    - name: Test
      run: cargo test --target ${{ matrix.target }} --all-targets --all-features -- --nocapture
      
    - name: Build (default features)
      run: cargo build --target ${{ matrix.target }} --all-targets
    - name: Build (no features)
      run: cargo build --target ${{ matrix.target }} --no-default-features --all-targets
    - name: Build (feature syringe)
      run: cargo build --target ${{ matrix.target }} --features syringe --all-targets
    - name: Build (feature rpc)
      run: cargo build --target ${{ matrix.target }} --features rpc --all-targets

  documentation:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["windows-latest"]
    steps:
    - uses: actions/checkout@v4
    - name: Install latest nightly
      uses: dtolnay/rust-toolchain@stable
      with:
          targets: x86_64-pc-windows-msvc, i686-pc-windows-msvc
          toolchain: nightly
    - name: Generate documentation
      run: cargo doc --all-features
    - name: Install cargo-deadlinks
      run: cargo install cargo-deadlinks
    - name: Check dead links in doc
      run: cargo deadlinks

  clippy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["windows-latest"]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
            targets: x86_64-pc-windows-msvc, i686-pc-windows-msvc
            toolchain: nightly
            components: clippy
      - name: Clippy check
        run: cargo clippy --all-features
